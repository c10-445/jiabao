package edu.jiabao.database;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import edu.jiabao.database.Device;
import edu.jiabao.database.folder;
import edu.jiabao.database.Label;
import edu.jiabao.database.Operator;
import edu.jiabao.database.Timing;

import edu.jiabao.database.DeviceDao;
import edu.jiabao.database.folderDao;
import edu.jiabao.database.LabelDao;
import edu.jiabao.database.OperatorDao;
import edu.jiabao.database.TimingDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig deviceDaoConfig;
    private final DaoConfig folderDaoConfig;
    private final DaoConfig labelDaoConfig;
    private final DaoConfig operatorDaoConfig;
    private final DaoConfig timingDaoConfig;

    private final DeviceDao deviceDao;
    private final folderDao folderDao;
    private final LabelDao labelDao;
    private final OperatorDao operatorDao;
    private final TimingDao timingDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        deviceDaoConfig = daoConfigMap.get(DeviceDao.class).clone();
        deviceDaoConfig.initIdentityScope(type);

        folderDaoConfig = daoConfigMap.get(folderDao.class).clone();
        folderDaoConfig.initIdentityScope(type);

        labelDaoConfig = daoConfigMap.get(LabelDao.class).clone();
        labelDaoConfig.initIdentityScope(type);

        operatorDaoConfig = daoConfigMap.get(OperatorDao.class).clone();
        operatorDaoConfig.initIdentityScope(type);

        timingDaoConfig = daoConfigMap.get(TimingDao.class).clone();
        timingDaoConfig.initIdentityScope(type);

        deviceDao = new DeviceDao(deviceDaoConfig, this);
        folderDao = new folderDao(folderDaoConfig, this);
        labelDao = new LabelDao(labelDaoConfig, this);
        operatorDao = new OperatorDao(operatorDaoConfig, this);
        timingDao = new TimingDao(timingDaoConfig, this);

        registerDao(Device.class, deviceDao);
        registerDao(folder.class, folderDao);
        registerDao(Label.class, labelDao);
        registerDao(Operator.class, operatorDao);
        registerDao(Timing.class, timingDao);
    }
    
    public void clear() {
        deviceDaoConfig.clearIdentityScope();
        folderDaoConfig.clearIdentityScope();
        labelDaoConfig.clearIdentityScope();
        operatorDaoConfig.clearIdentityScope();
        timingDaoConfig.clearIdentityScope();
    }

    public DeviceDao getDeviceDao() {
        return deviceDao;
    }

    public folderDao getFolderDao() {
        return folderDao;
    }

    public LabelDao getLabelDao() {
        return labelDao;
    }

    public OperatorDao getOperatorDao() {
        return operatorDao;
    }

    public TimingDao getTimingDao() {
        return timingDao;
    }

}
